///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, Щербаков Вадим, chtcherbakov.vadim@gmail.com
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode

#Если ТолстыйКлиентУправляемоеПриложение Тогда	
&НаКлиенте	
Перем ПутьКОбработкеПослеОткрытия;
	
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	Поз = Найти(СтрокаСоединения, "File=""");
	Если Поз = 0 Тогда                       
		Предупреждение(НСтр("ru = 'Неверный тип ИБ'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СтрокаСоединения = Сред(СтрокаСоединения, Поз + 6);
	Поз = Найти(СтрокаСоединения, """;");
	Если Поз = 0 Тогда                       
		Предупреждение(НСтр("ru = 'Неверный путь к файловой ИБ'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	МассивПараметры = СтрРазделить(ПараметрЗапуска, ";", Истина);
	
	Заголовок2 = Неопределено;
	Если МассивПараметры.Количество() = 2 Тогда
		Заголовок1 = ПолучитьЗаголовокСравнения(НСтр("ru = 'Старый'"), НСтр("ru = 'Новый'"));
		
	ИначеЕсли МассивПараметры.Количество() = 3 Тогда
		Заголовок1 = ПолучитьЗаголовокСравнения(НСтр("ru = 'Старый'"), НСтр("ru = 'Текущий'"));
		Заголовок2 = ПолучитьЗаголовокСравнения(НСтр("ru = 'Старый'"), НСтр("ru = 'Новый'"));
		
	ИначеЕсли МассивПараметры.Количество() = 4 Тогда
		// 2-х стороннее сравнение
		Заголовок1 = ПолучитьЗаголовокСравнения(МассивПараметры[2], МассивПараметры[3]);
		
	ИначеЕсли МассивПараметры.Количество() = 6 Тогда
		// 3-х стороннее сравнение
		Заголовок1 = ПолучитьЗаголовокСравнения(МассивПараметры[3], МассивПараметры[4]);
		Заголовок2 = ПолучитьЗаголовокСравнения(МассивПараметры[3], МассивПараметры[5]);
	Иначе
		Предупреждение(НСтр("ru = 'Неверное количество параметров'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	КаталогИБ = Лев(СтрокаСоединения, Поз - 1);
	ОбъектКаталогаEDT = Новый Файл(КаталогИБ + "\edt");
	Если НЕ ОбъектКаталогаEDT.Существует() Тогда
		//
		ПараметрыКонфигурацияВФайлы = СтрШаблон("DESIGNER /DumpConfigToFiles %1"
			,КаталогИБ + "\export");
			
		КодВозврата = Неопределено;	
		ЗапуститьСистему(ПараметрыКонфигурацияВФайлы, Истина, КодВозврата);
		Если КодВозврата <> 0 Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		//
		ПреобразоватьФайлыОбработок(КаталогИБ + "\export");
		
		//
		КомандаСоздатьРабочийКаталог= СтрШаблон("cmd.exe /c ring edt%1 workspace import --configuration-files %2 --workspace-location %3 --project-name main"
			,СуффиксВерсииEDT()
			,КаталогИБ + "\export\DataProcessors"
			,КаталогИБ + "\edt");
			
		КодВозврата = Неопределено;	
		ЗапуститьПриложение(КомандаСоздатьРабочийКаталог, , Истина, КодВозврата);
		Если КодВозврата <> 0 Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	ПутьКОбработкеПослеОткрытия = СоздатьОбработкуСравнения(КаталогИБ, МассивПараметры[0], МассивПараметры[1], Заголовок1, Отказ);
	
	Если Заголовок2 <> Неопределено Тогда
		ПутьКОбработке = СоздатьОбработкуСравнения(КаталогИБ, МассивПараметры[0], МассивПараметры[2], Заголовок2, Отказ);
		Если ПутьКОбработке <> Неопределено Тогда
			ПараметрыОткрытьОбработку = СтрШаблон("/CЗапускВнешнейОбработки /Execute %1", ПутьКОбработке);
			ЗапуститьСистему(ПараметрыОткрытьОбработку);
		КонецЕсли;
	КонецЕсли;	
	
	ПодключитьОбработчикОжидания("ПослеОткрытия", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПослеОткрытия()
	Если ПутьКОбработкеПослеОткрытия <> Неопределено Тогда
		ВнешняяОбработка = ВнешниеОбработки.Создать(ПутьКОбработкеПослеОткрытия);
		ОткрытьФорму("ВнешняяОбработка.СравнениеТабличныхДокументов.Форма");
	КонецЕсли;
	
	Закрыть();
КонецПроцедуры

&НаКлиенте
Функция СоздатьОбработкуСравнения(КаталогИБ, Файл1, Файл2, Заголовок, Отказ)
	//
	КопироватьФайл(Файл1, КаталогИБ + "\edt\main\src\ExternalDataProcessors\СравнениеТабличныхДокументов\Templates\Макет1\Template.mxlx");
	КопироватьФайл(Файл2, КаталогИБ + "\edt\main\src\ExternalDataProcessors\СравнениеТабличныхДокументов\Templates\Макет2\Template.mxlx");
	
	ЗаписьТекста = Новый ЗаписьТекста(КаталогИБ + "\edt\main\src\ExternalDataProcessors\СравнениеТабличныхДокументов\Templates\Заголовок\Template.txt");
	ЗаписьТекста.Записать(Заголовок);
	ЗаписьТекста.Закрыть();
	
	//
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	УдалитьФайлы(КаталогИБ + "\temp");
	
	КомандаСоздатьФайлыОбработки = СтрШаблон("cmd.exe /c ring edt%1 workspace export --workspace-location %2 --configuration-files %3 --project-name main"
		,СуффиксВерсииEDT()
		,КаталогИБ + "\edt"
		,КаталогИБ + "\temp");
		
	КодВозврата = Неопределено;	
	ЗапуститьПриложение(КомандаСоздатьФайлыОбработки, , Истина, КодВозврата);
	Если КодВозврата <> 0 Тогда
		Отказ = Истина;
		Возврат Неопределено;
	КонецЕсли;
		
	//
	КомандаСоздатьОбработку = СтрШаблон("DESIGNER /LoadExternalDataProcessorOrReportFromFiles %1 %2"
		,КаталогИБ + "\temp\ExternalDataProcessors\СравнениеТабличныхДокументов.xml", ИмяВременногоФайла);
		
	КодВозврата = Неопределено;	
	ЗапуститьСистему(КомандаСоздатьОбработку, Истина, КодВозврата);
	Если КодВозврата <> 0 Тогда
		Отказ = Истина;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ИмяВременногоФайла;
КонецФункции

&НаКлиенте
Процедура ПреобразоватьФайлыОбработок(ПутьККаталогуПоставки)
	МассивФайлы = НайтиФайлы(ПутьККаталогуПоставки + "\DataProcessors", "*.xml", Истина);
	Для Каждого Файл Из МассивФайлы Цикл
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.ОткрытьФайл(Файл.ПолноеИмя);
		
		ПостроительDOM = Новый ПостроительDOM;
		ДокументDOM = ПостроительDOM.Прочитать(ЧтениеXML);
		ЧтениеXML.Закрыть();
		
		ОбработатьУровеньDOM(ДокументDOM, ДокументDOM.ЭлементДокумента);
		
		ЗаписьXML = Новый ЗаписьXML();
		ЗаписьXML.УстановитьСтроку(ЧтениеXML.КодировкаXML);
		
		ЗаписьDOM = Новый ЗаписьDOM();
		ЗаписьDOM.Записать(ДокументDOM, ЗаписьXML);
		
		Строка = ЗаписьXML.Закрыть();
		Строка = СтрЗаменить(Строка, "DataProcessor", "ExternalDataProcessor");
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.УстановитьТекст(Строка);
		ТекстовыйДокумент.Записать(Файл.ПолноеИмя, ЧтениеXML.КодировкаXML);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьУровеньDOM(Документ, Элемент, МассивДобавляемые = Неопределено, МассивУдаляемые = Неопределено)
	Если Элемент.ТипУзла = ТипУзлаDOM.Элемент Тогда
		Если Элемент.ИмяУзла = "DataProcessor" Тогда
			Документ.ПереименоватьУзел(Элемент, Элемент.URIПространстваИмен, "http://v8.1c.ru/8.3/MDClasses/ExternalDataProcessor");
		
		ИначеЕсли Элемент.ИмяУзла = "UseStandardCommands"
				ИЛИ Элемент.ИмяУзла = "IncludeHelpInContents"
				ИЛИ Элемент.ИмяУзла = "ExtendedPresentation"
				ИЛИ Элемент.ИмяУзла = "Explanation" Тогда
				
			МассивУдаляемые.Добавить(Элемент);
			Возврат;
			
		ИначеЕсли Элемент.URIПространстваИмен = "http://v8.1c.ru/8.3/xcf/readable"
			И Элемент.ЛокальноеИмя = "GeneratedType"
			И Элемент.Атрибуты.ПолучитьИменованныйЭлемент("category").Значение = "Manager" Тогда
			
			ЭлементDOM = Документ.СоздатьЭлемент("http://v8.1c.ru/8.3/xcf/readable", "ContainedObject");
			
			Для Каждого ДочернийЭлемент Из Элемент.ДочерниеУзлы Цикл
				Если ДочернийЭлемент.URIПространстваИмен = "http://v8.1c.ru/8.3/xcf/readable"
					И ДочернийЭлемент.ЛокальноеИмя = "TypeId" Тогда
					
					ДочернийЭлементDOM = Документ.СоздатьЭлемент("http://v8.1c.ru/8.3/xcf/readable", "ClassId");
					ДочернийЭлементDOM.ТекстовоеСодержимое = "c3831ec8-d8d5-4f93-8a22-f9bfae07327f";
					
					ЭлементDOM.ДобавитьДочерний(ДочернийЭлементDOM);
					
				ИначеЕсли ДочернийЭлемент.URIПространстваИмен = "http://v8.1c.ru/8.3/xcf/readable"
					И ДочернийЭлемент.ЛокальноеИмя = "ValueId" Тогда
					
					ДочернийЭлементDOM = Документ.СоздатьЭлемент("http://v8.1c.ru/8.3/xcf/readable", "ObjectId");
					ДочернийЭлементDOM.ТекстовоеСодержимое = ДочернийЭлемент.ТекстовоеСодержимое;
					
					ЭлементDOM.ДобавитьДочерний(ДочернийЭлементDOM);
				КонецЕсли;
			КонецЦикла;
			
			МассивДобавляемые.Добавить(ЭлементDOM);
			МассивУдаляемые.Добавить(Элемент);
		КонецЕсли;
	КонецЕсли;
	
	МассивДляДобавления = Новый Массив;
	МассивДляУдаления = Новый Массив;
	Для Каждого ДочернийУзел Из Элемент.ДочерниеУзлы Цикл
		Если ТипЗнч(ДочернийУзел) = Тип("ЭлементDOM") Тогда
			ОбработатьУровеньDOM(Документ, ДочернийУзел, МассивДляДобавления, МассивДляУдаления);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ДочернийУзел Из МассивДляДобавления Цикл
		Элемент.ДобавитьДочерний(ДочернийУзел);	
	КонецЦикла;
	
	Для Каждого ДочернийУзел Из МассивДляУдаления Цикл
		Элемент.УдалитьДочерний(ДочернийУзел);	
	КонецЦикла;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СуффиксВерсииEDT()
	ВерсияEDT = НастройкиКлиентСерверПереопределяемый.ВерсияEDT();
	Возврат ?(ЗначениеЗаполнено(ВерсияEDT), "@" + ВерсияEDT, "");
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьЗаголовокСравнения(Заголовок1, Заголовок2)
	ОбщийЗаголовок = "";
	Для Инд = 1 По Мин(СтрДлина(Заголовок1), СтрДлина(Заголовок2)) Цикл
		ТекущийСимвол = Сред(Заголовок1, Инд, 1);
		Если ТекущийСимвол = Сред(Заголовок2, Инд, 1)
			И ТекущийСимвол <> "(" Тогда
			ОбщийЗаголовок = ОбщийЗаголовок + ТекущийСимвол;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрШаблон("%1 [%2 <-> %3]"
		,ОбщийЗаголовок, Сред(Заголовок1, СтрДлина(ОбщийЗаголовок) + 1), Сред(Заголовок2, СтрДлина(ОбщийЗаголовок) + 1));
КонецФункции

#КонецЕсли